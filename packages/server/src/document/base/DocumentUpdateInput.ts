/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountUpdateManyWithoutDocumentsInput } from "./AccountUpdateManyWithoutDocumentsInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsDate,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { EnumDocumentDocumentType } from "./EnumDocumentDocumentType";
import { EnumDocumentStatus } from "./EnumDocumentStatus";

@InputType()
class DocumentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccountUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => AccountUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => AccountUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  accounts?: AccountUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentDocumentType,
  })
  @IsEnum(EnumDocumentDocumentType)
  @IsOptional()
  @Field(() => EnumDocumentDocumentType, {
    nullable: true,
  })
  documentType?: "Driverlicence" | "Passport" | "GovernmentId";

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  expiringAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  image?: string;

  @ApiProperty({
    required: false,
    enum: EnumDocumentStatus,
  })
  @IsEnum(EnumDocumentStatus)
  @IsOptional()
  @Field(() => EnumDocumentStatus, {
    nullable: true,
  })
  status?: "Approved" | "Rejected" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tags?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url?: string;
}

export { DocumentUpdateInput as DocumentUpdateInput };
