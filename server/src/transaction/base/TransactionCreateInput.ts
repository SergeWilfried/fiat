/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from '@nestjs/graphql';
import { ApiProperty } from '@nestjs/swagger';
import { AccountCreateNestedManyWithoutTransactionsInput } from './AccountCreateNestedManyWithoutTransactionsInput';
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsNumber,
  IsEnum,
} from 'class-validator';
import { Type } from 'class-transformer';
import { EnumTransactionStatus } from './EnumTransactionStatus';
import { EnumTransactionTransactionSubtype } from './EnumTransactionTransactionSubtype';
import { EnumTransactionTransactionType } from './EnumTransactionTransactionType';

@InputType()
class TransactionCreateInput {
  @ApiProperty({
    required: false,
    type: () => AccountCreateNestedManyWithoutTransactionsInput,
  })
  @ValidateNested()
  @Type(() => AccountCreateNestedManyWithoutTransactionsInput)
  @IsOptional()
  @Field(() => AccountCreateNestedManyWithoutTransactionsInput, {
    nullable: true,
  })
  accounts?: AccountCreateNestedManyWithoutTransactionsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  amount!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  fee?: number | null;

  @ApiProperty({
    required: true,
    enum: EnumTransactionStatus,
  })
  @IsEnum(EnumTransactionStatus)
  @Field(() => EnumTransactionStatus)
  status!: 'Successful' | 'Pending' | 'Failed';

  @ApiProperty({
    required: false,
    enum: EnumTransactionTransactionSubtype,
  })
  @IsEnum(EnumTransactionTransactionSubtype)
  @IsOptional()
  @Field(() => EnumTransactionTransactionSubtype, {
    nullable: true,
  })
  transactionSubtype?: 'Fiat' | 'Crypto' | null;

  @ApiProperty({
    required: true,
    enum: EnumTransactionTransactionType,
  })
  @IsEnum(EnumTransactionTransactionType)
  @Field(() => EnumTransactionTransactionType)
  transactionType!: 'Credit' | 'Debit';
}

export { TransactionCreateInput };
