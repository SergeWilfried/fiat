/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountCreateNestedManyWithoutCustomersInput } from "./AccountCreateNestedManyWithoutCustomersInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Account } from "../../account/base/Account";
import { DocumentCreateNestedManyWithoutCustomersInput } from "./DocumentCreateNestedManyWithoutCustomersInput";
import { UserCreateNestedManyWithoutCustomersInput } from "./UserCreateNestedManyWithoutCustomersInput";
import { EnumCustomerStatus } from "./EnumCustomerStatus";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: () => AccountCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => AccountCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => AccountCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  Account?: AccountCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dob?: Date | null;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  enitities?: UserCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstname?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastname?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phone!: string;

  @ApiProperty({
    required: false,
    enum: EnumCustomerStatus,
  })
  @IsEnum(EnumCustomerStatus)
  @IsOptional()
  @Field(() => EnumCustomerStatus, {
    nullable: true,
  })
  status?: "Approved" | "Failed" | "Pending" | null;
}

export { CustomerCreateInput as CustomerCreateInput };
